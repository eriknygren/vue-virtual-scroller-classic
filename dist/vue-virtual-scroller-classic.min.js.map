{"version":3,"file":"vue-virtual-scroller-classic.min.js","sources":["../src/config.js","../node_modules/vue-resize/dist/vue-resize.esm.js","../node_modules/scrollparent/scrollparent.js","../src/utils.js","../src/mixins/scroller.js","../src/components/VirtualScroller.vue","../src/components/VirtualScroller.vue?vue&type=template&id=727d6836&lang.js","../src/index.js"],"sourcesContent":["export default {\n  itemsLimit: 1000,\n}\n","import { nextTick, pushScopeId, popScopeId, openBlock, createBlock, withScopeId } from 'vue';\n\nfunction getInternetExplorerVersion() {\n  var ua = window.navigator.userAgent;\n  var msie = ua.indexOf('MSIE ');\n\n  if (msie > 0) {\n    // IE 10 or older => return version number\n    return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n  }\n\n  var trident = ua.indexOf('Trident/');\n\n  if (trident > 0) {\n    // IE 11 => return version number\n    var rv = ua.indexOf('rv:');\n    return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n  }\n\n  var edge = ua.indexOf('Edge/');\n\n  if (edge > 0) {\n    // Edge (IE 12+) => return version number\n    return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n  } // other browser\n\n\n  return -1;\n}\n\nlet isIE;\n\nfunction initCompat () {\n  if (!initCompat.init) {\n    initCompat.init = true;\n    isIE = getInternetExplorerVersion() !== -1;\n  }\n}\n\nvar script = {\n  name: 'ResizeObserver',\n\n  props: {\n    emitOnMount: {\n      type: Boolean,\n      default: false,\n    },\n\n    ignoreWidth: {\n      type: Boolean,\n      default: false,\n    },\n\n    ignoreHeight: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\n    'notify',\n  ],\n\n  mounted () {\n    initCompat();\n    nextTick(() => {\n      this._w = this.$el.offsetWidth;\n      this._h = this.$el.offsetHeight;\n      if (this.emitOnMount) {\n        this.emitSize();\n      }\n    });\n    const object = document.createElement('object');\n    this._resizeObject = object;\n    object.setAttribute('aria-hidden', 'true');\n    object.setAttribute('tabindex', -1);\n    object.onload = this.addResizeHandlers;\n    object.type = 'text/html';\n    if (isIE) {\n      this.$el.appendChild(object);\n    }\n    object.data = 'about:blank';\n    if (!isIE) {\n      this.$el.appendChild(object);\n    }\n  },\n\n  beforeUnmount () {\n    this.removeResizeHandlers();\n  },\n\n  methods: {\n    compareAndNotify () {\n      if ((!this.ignoreWidth && this._w !== this.$el.offsetWidth) || (!this.ignoreHeight && this._h !== this.$el.offsetHeight)) {\n        this._w = this.$el.offsetWidth;\n        this._h = this.$el.offsetHeight;\n        this.emitSize();\n      }\n    },\n\n    emitSize () {\n      this.$emit('notify', {\n        width: this._w,\n        height: this._h,\n      });\n    },\n\n    addResizeHandlers () {\n      this._resizeObject.contentDocument.defaultView.addEventListener('resize', this.compareAndNotify);\n      this.compareAndNotify();\n    },\n\n    removeResizeHandlers () {\n      if (this._resizeObject && this._resizeObject.onload) {\n        if (!isIE && this._resizeObject.contentDocument) {\n          this._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.compareAndNotify);\n        }\n        this.$el.removeChild(this._resizeObject);\n        this._resizeObject.onload = null;\n        this._resizeObject = null;\n      }\n    },\n  },\n};\n\nconst _withId = /*#__PURE__*/withScopeId(\"data-v-b329ee4c\");\n\npushScopeId(\"data-v-b329ee4c\");\nconst _hoisted_1 = {\n  class: \"resize-observer\",\n  tabindex: \"-1\"\n};\npopScopeId();\n\nconst render = /*#__PURE__*/_withId((_ctx, _cache, $props, $setup, $data, $options) => {\n  return (openBlock(), createBlock(\"div\", _hoisted_1))\n});\n\nscript.render = render;\nscript.__scopeId = \"data-v-b329ee4c\";\nscript.__file = \"src/components/ResizeObserver.vue\";\n\nfunction install(app) {\n  // eslint-disable-next-line vue/component-definition-name-casing\n  app.component('resize-observer', script);\n  app.component('ResizeObserver', script);\n}\n\nvar plugin = {\n  // eslint-disable-next-line no-undef\n  version: \"2.0.0-alpha.1\",\n  install: install\n};\n\nexport default plugin;\nexport { script as ResizeObserver, install };\n//# sourceMappingURL=vue-resize.esm.js.map\n","(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n}(this, function () {\n  var regex = /(auto|scroll)/;\n\n  var parents = function (node, ps) {\n    if (node.parentNode === null) { return ps; }\n\n    return parents(node.parentNode, ps.concat([node]));\n  };\n\n  var style = function (node, prop) {\n    return getComputedStyle(node, null).getPropertyValue(prop);\n  };\n\n  var overflow = function (node) {\n    return style(node, \"overflow\") + style(node, \"overflow-y\") + style(node, \"overflow-x\");\n  };\n\n  var scroll = function (node) {\n   return regex.test(overflow(node));\n  };\n\n  var scrollParent = function (node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return ;\n    }\n\n    var ps = parents(node.parentNode, []);\n\n    for (var i = 0; i < ps.length; i += 1) {\n      if (scroll(ps[i])) {\n        return ps[i];\n      }\n    }\n\n    return document.scrollingElement || document.documentElement;\n  };\n\n  return scrollParent;\n}));\n","export let supportsPassive = false\n\nif (typeof window !== 'undefined') {\n  supportsPassive = false\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get () {\n        supportsPassive = true\n      },\n    })\n    window.addEventListener('test', null, opts)\n  } catch (e) {}\n}\n","import { ResizeObserver } from 'vue-resize'\nimport { ObserveVisibility } from 'vue-observe-visibility'\nimport ScrollParent from 'scrollparent'\nimport { supportsPassive } from '../utils'\n\n// @vue/component\nexport default {\n  components: {\n    ResizeObserver,\n  },\n\n  directives: {\n    ObserveVisibility,\n  },\n\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n    itemHeight: {\n      type: [Number, String],\n      default: null,\n    },\n    minItemHeight: {\n      type: [Number, String],\n      default: null,\n    },\n    heightField: {\n      type: String,\n      default: 'height',\n    },\n    typeField: {\n      type: String,\n      default: 'type',\n    },\n    buffer: {\n      type: [Number, String],\n      default: 200,\n    },\n    pageMode: {\n      type: Boolean,\n      default: false,\n    },\n    prerender: {\n      type: [Number, String],\n      default: 0,\n    },\n    emitUpdate: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    cssClass () {\n      return {\n        'page-mode': this.pageMode,\n      }\n    },\n\n    heights () {\n      if (this.itemHeight === null) {\n        const heights = {\n          '-1': { accumulator: 0 },\n        }\n        const items = this.items\n        const field = this.heightField\n        const minItemHeight = this.minItemHeight\n        let accumulator = 0\n        let current\n        for (let i = 0, l = items.length; i < l; i++) {\n          current = items[i][field] || minItemHeight\n          accumulator += current\n          heights[i] = { accumulator, height: current }\n        }\n        return heights\n      } else {\n        return {}\n      }\n    },\n  },\n\n  beforeUnmount () {\n    this.removeListeners()\n  },\n\n  methods: {\n    getListenerTarget () {\n      let target = ScrollParent(this.$el)\n      // Fix global scroll target for Chrome and Safari\n      if (target === window.document.documentElement || target === window.document.body) {\n        target = window\n      }\n      return target\n    },\n\n    getScroll () {\n      const el = this.$el\n      let scrollState\n\n      if (this.pageMode) {\n        const rect = el.getBoundingClientRect()\n        let top = -rect.top\n        let height = window.innerHeight\n        if (top < 0) {\n          height += top\n          top = 0\n        }\n        if (top + height > rect.height) {\n          height = rect.height - top\n        }\n        scrollState = {\n          top,\n          bottom: top + height,\n        }\n      } else {\n        scrollState = {\n          top: el.scrollTop,\n          bottom: el.scrollTop + el.clientHeight,\n        }\n      }\n\n      return scrollState\n    },\n\n    applyPageMode () {\n      if (this.pageMode) {\n        this.addListeners()\n      } else {\n        this.removeListeners()\n      }\n    },\n\n    addListeners () {\n      this.listenerTarget = this.getListenerTarget()\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive\n        ? {\n            passive: true,\n          }\n        : false)\n      this.listenerTarget.addEventListener('resize', this.handleResize)\n    },\n\n    removeListeners () {\n      if (!this.listenerTarget) {\n        return\n      }\n\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\n\n      this.listenerTarget = null\n    },\n\n    scrollToItem (index) {\n      let scrollTop\n      if (this.itemHeight === null) {\n        scrollTop = index > 0 ? this.heights[index - 1].accumulator : 0\n      } else {\n        scrollTop = index * this.itemHeight\n      }\n      this.scrollToPosition(scrollTop)\n    },\n\n    scrollToPosition (position) {\n      this.$el.scrollTop = position\n    },\n\n    itemsLimitError () {\n      setTimeout(() => {\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\n        console.log('Make sure the scroller has a fixed height and \\'overflow-y\\' set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\n      })\n      throw new Error('Rendered items limit reached')\n    },\n  },\n}\n","<template>\n  <component\n    :is=\"mainTag\"\n    v-observe-visibility=\"handleVisibilityChange\"\n    :class=\"cssClass\"\n    class=\"virtual-scroller\"\n    @scroll.passive=\"handleScroll\"\n  >\n    <slot\n      name=\"before-container\"\n    />\n    <component\n      :is=\"containerTag\"\n      ref=\"itemContainer\"\n      :class=\"containerClass\"\n      :style=\"itemContainerStyle\"\n      class=\"item-container\"\n    >\n      <slot\n        name=\"before-content\"\n      />\n      <component\n        :is=\"contentTag\"\n        ref=\"items\"\n        :class=\"contentClass\"\n        :style=\"itemsStyle\"\n        class=\"items\"\n      >\n        <template v-if=\"renderers\">\n          <component\n            :is=\"renderers[item[typeField]]\"\n            v-for=\"(item, index) in visibleItems\"\n            :key=\"keysEnabled && item[keyField] || undefined\"\n            :item=\"item\"\n            :item-index=\"$_startIndex + index\"\n            class=\"item\"\n          />\n        </template>\n        <template v-else>\n          <slot\n            v-for=\"(item, index) in visibleItems\"\n            :item=\"item\"\n            :item-index=\"$_startIndex + index\"\n            :item-key=\"keysEnabled && item[keyField] || undefined\"\n            class=\"item\"\n          />\n        </template>\n      </component>\n      <slot\n        name=\"after-content\"\n      />\n    </component>\n    <slot\n      name=\"after-container\"\n    />\n    <resize-observer @notify=\"handleResize\" />\n  </component>\n</template>\n\n<script>\nimport Scroller from '../mixins/scroller'\nimport config from '../config'\n\nexport default {\n  name: 'VirtualScroller',\n\n  mixins: [\n    Scroller,\n  ],\n\n  props: {\n    renderers: {\n      type: Object,\n      default: null,\n    },\n    keyField: {\n      type: String,\n      default: 'id',\n    },\n    mainTag: {\n      type: String,\n      default: 'div',\n    },\n    containerTag: {\n      type: String,\n      default: 'div',\n    },\n    containerClass: {\n      type: [String, Array, Object],\n      default: null,\n    },\n    contentTag: {\n      type: String,\n      default: 'div',\n    },\n    contentClass: {\n      type: [String, Array, Object],\n      default: null,\n    },\n    poolSize: {\n      type: [Number, String],\n      default: 2000,\n    },\n    delayPreviousItems: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\n    'resize',\n    'visible',\n    'hidden',\n    'update',\n  ],\n\n  data () {\n    return {\n      visibleItems: [],\n      itemContainerStyle: null,\n      itemsStyle: null,\n      keysEnabled: true,\n    }\n  },\n\n  watch: {\n    items: {\n      handler () {\n        this.updateVisibleItems(true)\n      },\n      deep: true,\n    },\n    pageMode () {\n      this.applyPageMode()\n      this.updateVisibleItems(true)\n    },\n    itemHeight: 'setDirty',\n  },\n\n  created () {\n    this.$_ready = false\n    this.$_startIndex = 0\n    this.$_oldScrollTop = null\n    this.$_oldScrollBottom = null\n    this.$_offsetTop = 0\n    this.$_height = 0\n    this.$_scrollDirty = false\n    this.$_updateDirty = false\n\n    const prerender = parseInt(this.prerender)\n    if (prerender > 0) {\n      this.visibleItems = this.items.slice(0, prerender)\n      this.$_length = this.visibleItems.length\n      this.$_endIndex = this.$_length - 1\n      this.$_skip = true\n    } else {\n      this.$_endIndex = 0\n      this.$_length = 0\n      this.$_skip = false\n    }\n  },\n\n  mounted () {\n    this.applyPageMode()\n    this.$nextTick(() => {\n      this.updateVisibleItems(true)\n      this.$_ready = true\n    })\n  },\n\n  methods: {\n    updateVisibleItems (force = false) {\n      if (!this.$_updateDirty) {\n        this.$_updateDirty = true\n        this.$nextTick(() => {\n          this.$_updateDirty = false\n\n          const l = this.items.length\n          const scroll = this.getScroll()\n          const items = this.items\n          const itemHeight = this.itemHeight\n          let containerHeight, offsetTop\n          if (scroll) {\n            let startIndex = -1\n            let endIndex = -1\n\n            const buffer = parseInt(this.buffer)\n            const poolSize = parseInt(this.poolSize)\n            const scrollTop = ~~(scroll.top / poolSize) * poolSize - buffer\n            const scrollBottom = Math.ceil(scroll.bottom / poolSize) * poolSize + buffer\n\n            if (!force && ((scrollTop === this.$_oldScrollTop && scrollBottom === this.$_oldScrollBottom) || this.$_skip)) {\n              this.$_skip = false\n              return\n            } else {\n              this.$_oldScrollTop = scrollTop\n              this.$_oldScrollBottom = scrollBottom\n            }\n\n            // Variable height mode\n            if (itemHeight === null) {\n              const heights = this.heights\n              let h\n              let a = 0\n              let b = l - 1\n              let i = ~~(l / 2)\n              let oldI\n\n              // Searching for startIndex\n              do {\n                oldI = i\n                h = heights[i].accumulator\n                if (h < scrollTop) {\n                  a = i\n                } else if (i < l - 1 && heights[i + 1].accumulator > scrollTop) {\n                  b = i\n                }\n                i = ~~((a + b) / 2)\n              } while (i !== oldI)\n              i < 0 && (i = 0)\n              startIndex = i\n\n              // For containers style\n              offsetTop = i > 0 ? heights[i - 1].accumulator : 0\n              containerHeight = heights[l - 1].accumulator\n\n              // Searching for endIndex\n              for (endIndex = i; endIndex < l && heights[endIndex].accumulator < scrollBottom; endIndex++);\n              if (endIndex === -1) {\n                endIndex = items.length - 1\n              } else {\n                endIndex++\n                // Bounds\n                endIndex > l && (endIndex = l)\n              }\n            } else {\n              // Fixed height mode\n              startIndex = ~~(scrollTop / itemHeight)\n              endIndex = Math.ceil(scrollBottom / itemHeight)\n\n              // Bounds\n              startIndex < 0 && (startIndex = 0)\n              endIndex > l && (endIndex = l)\n\n              offsetTop = startIndex * itemHeight\n              containerHeight = l * itemHeight\n            }\n\n            if (endIndex - startIndex > config.itemsLimit) {\n              this.itemsLimitError()\n            }\n\n            if (\n              force ||\n              this.$_startIndex !== startIndex ||\n              this.$_endIndex !== endIndex ||\n              this.$_offsetTop !== offsetTop ||\n              this.$_height !== containerHeight ||\n              this.$_length !== l\n            ) {\n              this.keysEnabled = !(startIndex > this.$_endIndex || endIndex < this.$_startIndex)\n\n              this.itemContainerStyle = {\n                height: containerHeight + 'px',\n              }\n              this.itemsStyle = {\n                marginTop: offsetTop + 'px',\n              }\n\n              if (this.delayPreviousItems) {\n                // Add next items\n                this.visibleItems = items.slice(this.$_startIndex, endIndex)\n                // Remove previous items\n                this.$nextTick(() => {\n                  this.visibleItems = items.slice(startIndex, endIndex)\n                })\n              } else {\n                this.visibleItems = items.slice(startIndex, endIndex)\n              }\n\n              this.emitUpdate && this.$emit('update', startIndex, endIndex)\n\n              this.$_startIndex = startIndex\n              this.$_endIndex = endIndex\n              this.$_length = l\n              this.$_offsetTop = offsetTop\n              this.$_height = containerHeight\n            }\n          }\n        })\n      }\n    },\n\n    setDirty () {\n      this.$_oldScrollTop = null\n      this.$_oldScrollBottom = null\n    },\n\n    handleScroll () {\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true\n        requestAnimationFrame(() => {\n          this.$_scrollDirty = false\n          this.updateVisibleItems()\n        })\n      }\n    },\n\n    handleResize () {\n      this.$emit('resize')\n      this.$_ready && this.updateVisibleItems()\n    },\n\n    handleVisibilityChange (isVisible, entry) {\n      if (this.$_ready && (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0)) {\n        this.$emit('visible')\n        this.$nextTick(() => {\n          this.updateVisibleItems()\n        })\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.virtual-scroller:not(.page-mode) {\n  overflow-y: auto;\n}\n\n.item-container {\n  box-sizing: border-box;\n  width: 100%;\n  overflow: hidden;\n}\n\n.items {\n  width: 100%;\n}\n</style>\n","<template>\n  <component\n    :is=\"mainTag\"\n    v-observe-visibility=\"handleVisibilityChange\"\n    :class=\"cssClass\"\n    class=\"virtual-scroller\"\n    @scroll.passive=\"handleScroll\"\n  >\n    <slot\n      name=\"before-container\"\n    />\n    <component\n      :is=\"containerTag\"\n      ref=\"itemContainer\"\n      :class=\"containerClass\"\n      :style=\"itemContainerStyle\"\n      class=\"item-container\"\n    >\n      <slot\n        name=\"before-content\"\n      />\n      <component\n        :is=\"contentTag\"\n        ref=\"items\"\n        :class=\"contentClass\"\n        :style=\"itemsStyle\"\n        class=\"items\"\n      >\n        <template v-if=\"renderers\">\n          <component\n            :is=\"renderers[item[typeField]]\"\n            v-for=\"(item, index) in visibleItems\"\n            :key=\"keysEnabled && item[keyField] || undefined\"\n            :item=\"item\"\n            :item-index=\"$_startIndex + index\"\n            class=\"item\"\n          />\n        </template>\n        <template v-else>\n          <slot\n            v-for=\"(item, index) in visibleItems\"\n            :item=\"item\"\n            :item-index=\"$_startIndex + index\"\n            :item-key=\"keysEnabled && item[keyField] || undefined\"\n            class=\"item\"\n          />\n        </template>\n      </component>\n      <slot\n        name=\"after-content\"\n      />\n    </component>\n    <slot\n      name=\"after-container\"\n    />\n    <resize-observer @notify=\"handleResize\" />\n  </component>\n</template>\n\n<script>\nimport Scroller from '../mixins/scroller'\nimport config from '../config'\n\nexport default {\n  name: 'VirtualScroller',\n\n  mixins: [\n    Scroller,\n  ],\n\n  props: {\n    renderers: {\n      type: Object,\n      default: null,\n    },\n    keyField: {\n      type: String,\n      default: 'id',\n    },\n    mainTag: {\n      type: String,\n      default: 'div',\n    },\n    containerTag: {\n      type: String,\n      default: 'div',\n    },\n    containerClass: {\n      type: [String, Array, Object],\n      default: null,\n    },\n    contentTag: {\n      type: String,\n      default: 'div',\n    },\n    contentClass: {\n      type: [String, Array, Object],\n      default: null,\n    },\n    poolSize: {\n      type: [Number, String],\n      default: 2000,\n    },\n    delayPreviousItems: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\n    'resize',\n    'visible',\n    'hidden',\n    'update',\n  ],\n\n  data () {\n    return {\n      visibleItems: [],\n      itemContainerStyle: null,\n      itemsStyle: null,\n      keysEnabled: true,\n    }\n  },\n\n  watch: {\n    items: {\n      handler () {\n        this.updateVisibleItems(true)\n      },\n      deep: true,\n    },\n    pageMode () {\n      this.applyPageMode()\n      this.updateVisibleItems(true)\n    },\n    itemHeight: 'setDirty',\n  },\n\n  created () {\n    this.$_ready = false\n    this.$_startIndex = 0\n    this.$_oldScrollTop = null\n    this.$_oldScrollBottom = null\n    this.$_offsetTop = 0\n    this.$_height = 0\n    this.$_scrollDirty = false\n    this.$_updateDirty = false\n\n    const prerender = parseInt(this.prerender)\n    if (prerender > 0) {\n      this.visibleItems = this.items.slice(0, prerender)\n      this.$_length = this.visibleItems.length\n      this.$_endIndex = this.$_length - 1\n      this.$_skip = true\n    } else {\n      this.$_endIndex = 0\n      this.$_length = 0\n      this.$_skip = false\n    }\n  },\n\n  mounted () {\n    this.applyPageMode()\n    this.$nextTick(() => {\n      this.updateVisibleItems(true)\n      this.$_ready = true\n    })\n  },\n\n  methods: {\n    updateVisibleItems (force = false) {\n      if (!this.$_updateDirty) {\n        this.$_updateDirty = true\n        this.$nextTick(() => {\n          this.$_updateDirty = false\n\n          const l = this.items.length\n          const scroll = this.getScroll()\n          const items = this.items\n          const itemHeight = this.itemHeight\n          let containerHeight, offsetTop\n          if (scroll) {\n            let startIndex = -1\n            let endIndex = -1\n\n            const buffer = parseInt(this.buffer)\n            const poolSize = parseInt(this.poolSize)\n            const scrollTop = ~~(scroll.top / poolSize) * poolSize - buffer\n            const scrollBottom = Math.ceil(scroll.bottom / poolSize) * poolSize + buffer\n\n            if (!force && ((scrollTop === this.$_oldScrollTop && scrollBottom === this.$_oldScrollBottom) || this.$_skip)) {\n              this.$_skip = false\n              return\n            } else {\n              this.$_oldScrollTop = scrollTop\n              this.$_oldScrollBottom = scrollBottom\n            }\n\n            // Variable height mode\n            if (itemHeight === null) {\n              const heights = this.heights\n              let h\n              let a = 0\n              let b = l - 1\n              let i = ~~(l / 2)\n              let oldI\n\n              // Searching for startIndex\n              do {\n                oldI = i\n                h = heights[i].accumulator\n                if (h < scrollTop) {\n                  a = i\n                } else if (i < l - 1 && heights[i + 1].accumulator > scrollTop) {\n                  b = i\n                }\n                i = ~~((a + b) / 2)\n              } while (i !== oldI)\n              i < 0 && (i = 0)\n              startIndex = i\n\n              // For containers style\n              offsetTop = i > 0 ? heights[i - 1].accumulator : 0\n              containerHeight = heights[l - 1].accumulator\n\n              // Searching for endIndex\n              for (endIndex = i; endIndex < l && heights[endIndex].accumulator < scrollBottom; endIndex++);\n              if (endIndex === -1) {\n                endIndex = items.length - 1\n              } else {\n                endIndex++\n                // Bounds\n                endIndex > l && (endIndex = l)\n              }\n            } else {\n              // Fixed height mode\n              startIndex = ~~(scrollTop / itemHeight)\n              endIndex = Math.ceil(scrollBottom / itemHeight)\n\n              // Bounds\n              startIndex < 0 && (startIndex = 0)\n              endIndex > l && (endIndex = l)\n\n              offsetTop = startIndex * itemHeight\n              containerHeight = l * itemHeight\n            }\n\n            if (endIndex - startIndex > config.itemsLimit) {\n              this.itemsLimitError()\n            }\n\n            if (\n              force ||\n              this.$_startIndex !== startIndex ||\n              this.$_endIndex !== endIndex ||\n              this.$_offsetTop !== offsetTop ||\n              this.$_height !== containerHeight ||\n              this.$_length !== l\n            ) {\n              this.keysEnabled = !(startIndex > this.$_endIndex || endIndex < this.$_startIndex)\n\n              this.itemContainerStyle = {\n                height: containerHeight + 'px',\n              }\n              this.itemsStyle = {\n                marginTop: offsetTop + 'px',\n              }\n\n              if (this.delayPreviousItems) {\n                // Add next items\n                this.visibleItems = items.slice(this.$_startIndex, endIndex)\n                // Remove previous items\n                this.$nextTick(() => {\n                  this.visibleItems = items.slice(startIndex, endIndex)\n                })\n              } else {\n                this.visibleItems = items.slice(startIndex, endIndex)\n              }\n\n              this.emitUpdate && this.$emit('update', startIndex, endIndex)\n\n              this.$_startIndex = startIndex\n              this.$_endIndex = endIndex\n              this.$_length = l\n              this.$_offsetTop = offsetTop\n              this.$_height = containerHeight\n            }\n          }\n        })\n      }\n    },\n\n    setDirty () {\n      this.$_oldScrollTop = null\n      this.$_oldScrollBottom = null\n    },\n\n    handleScroll () {\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true\n        requestAnimationFrame(() => {\n          this.$_scrollDirty = false\n          this.updateVisibleItems()\n        })\n      }\n    },\n\n    handleResize () {\n      this.$emit('resize')\n      this.$_ready && this.updateVisibleItems()\n    },\n\n    handleVisibilityChange (isVisible, entry) {\n      if (this.$_ready && (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0)) {\n        this.$emit('visible')\n        this.$nextTick(() => {\n          this.updateVisibleItems()\n        })\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.virtual-scroller:not(.page-mode) {\n  overflow-y: auto;\n}\n\n.item-container {\n  box-sizing: border-box;\n  width: 100%;\n  overflow: hidden;\n}\n\n.items {\n  width: 100%;\n}\n</style>\n","import config from './config'\n\nimport VirtualScroller from './components/VirtualScroller.vue'\n\nexport {\n  VirtualScroller,\n}\n\nfunction registerComponents (app, prefix) {\n  app.component(`${prefix}virtual-scroller`, VirtualScroller)\n}\n\nconst plugin = {\n  // eslint-disable-next-line no-undef\n  version: VERSION,\n  install (app, options) {\n    const finalOptions = Object.assign({}, {\n      installComponents: true,\n      componentsPrefix: '',\n    }, options)\n\n    for (const key in finalOptions) {\n      if (typeof finalOptions[key] !== 'undefined') {\n        config[key] = finalOptions[key]\n      }\n    }\n\n    if (finalOptions.installComponents) {\n      registerComponents(app, finalOptions.componentsPrefix)\n    }\n  },\n}\n\nexport default plugin\n"],"names":["config","itemsLimit","isIE","initCompat","init","ua","window","navigator","userAgent","msie","indexOf","parseInt","substring","rv","edge","getInternetExplorerVersion","script","name","props","emitOnMount","type","Boolean","default","ignoreWidth","ignoreHeight","emits","[object Object]","nextTick","this","_w","$el","offsetWidth","_h","offsetHeight","emitSize","object","document","createElement","_resizeObject","setAttribute","onload","addResizeHandlers","appendChild","data","removeResizeHandlers","methods","$emit","width","height","contentDocument","defaultView","addEventListener","compareAndNotify","removeEventListener","removeChild","_withId","withScopeId","vue","pushScopeId","_hoisted_1","class","tabindex","popScopeId","render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createBlock","__scopeId","script$1","__file","root","factory","regex","parents","node","ps","parentNode","concat","style","prop","getComputedStyle","getPropertyValue","scroll","test","overflow","HTMLElement","SVGElement","i","length","scrollingElement","documentElement","module","exports","Scrollparent","supportsPassive","opts","Object","defineProperty","get","e","mixins","components","ResizeObserver","directives","ObserveVisibility","items","Array","required","itemHeight","Number","String","minItemHeight","heightField","typeField","buffer","pageMode","prerender","emitUpdate","computed","cssClass","page-mode","heights","current","-1","accumulator","field","l","beforeUnmount","removeListeners","getListenerTarget","target","ScrollParent","body","getScroll","scrollState","el","rect","getBoundingClientRect","top","innerHeight","bottom","scrollTop","clientHeight","applyPageMode","addListeners","listenerTarget","handleScroll","passive","handleResize","scrollToItem","index","scrollToPosition","position","itemsLimitError","_this","setTimeout","console","log","Error","renderers","keyField","mainTag","containerTag","containerClass","contentTag","contentClass","poolSize","delayPreviousItems","visibleItems","itemContainerStyle","itemsStyle","keysEnabled","watch","updateVisibleItems","deep","$_ready","$_startIndex","$_oldScrollTop","$_oldScrollBottom","$_offsetTop","$_height","$_scrollDirty","$_updateDirty","slice","$_length","$_endIndex","$_skip","$nextTick","force","containerHeight","offsetTop","startIndex","endIndex","scrollBottom","Math","ceil","h","oldI","a","b","marginTop","requestAnimationFrame","isVisible","entry","boundingClientRect","_withDirectives","_openBlock","_createBlock","_resolveDynamicComponent","_normalizeClass","_renderSlot","$slots","ref","_createElementBlock","_Fragment","key","_renderList","renderList","item","undefined","item-index","itemIndex","itemKey","_createVNode","_component_resize_observer","onNotify","handleVisibilityChange","plugin","version","VERSION","install","app","options","finalOptions","assign","installComponents","componentsPrefix","prefix","component","VirtualScroller","registerComponents"],"mappings":"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"}